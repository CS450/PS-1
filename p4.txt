Part A: 
vDSO stands for "virtual dynamic shared object" it is a shared library that the kernel adds to memory for all user-space applications. The goal of vDSO is to speed up programs that have to make numerous syscalls that flip between privilege and non-privileged modes.  

    Part B: 
    > ./a.out file vdso
    Start: 0x7fff0dee8000
    End:   0x7fff0deea000
    Bytes: 8192

    > objdump -T file

    file:     file format elf64-x86-64

    DYNAMIC SYMBOL TABLE:
    0000000000000a20  w   DF .text  0000000000000305  LINUX_2.6   clock_gettime
    0000000000000d30 g    DF .text  00000000000001c1  LINUX_2.6   __vdso_gettimeofday
    0000000000000d30  w   DF .text  00000000000001c1  LINUX_2.6   gettimeofday
    0000000000000f00 g    DF .text  0000000000000015  LINUX_2.6   __vdso_time
    0000000000000f00  w   DF .text  0000000000000015  LINUX_2.6   time
    0000000000000a20 g    DF .text  0000000000000305  LINUX_2.6   __vdso_clock_gettime
    0000000000000000 g    DO *ABS*  0000000000000000  LINUX_2.6   LINUX_2.6
    0000000000000f20 g    DF .text  000000000000002a  LINUX_2.6   __vdso_getcpu
    0000000000000f20  w   DF .text  000000000000002a  LINUX_2.6   getcpu

    Part C:
    elapsed time for my empty function: 2.03e-07 seconds.
    elapsed time for my function to increment a static variable: 1.51e-07 seconds.
    elapsed time for my function that writes to memory in the heap: 2.706e-06 seconds.
    elapsed time for gettimeofday() using vDSO: 2.802e-06 seconds.
    elapsed time for syscall: 8.043e-06 seconds.

    gettimeofday() is much faster than a normal syscall and takes nearly the same amount of time
    as a function that has to write to the heap. 
